name: Deploy Frontend to PRODUCTION

on:
  push:
    branches:
      - main # <<< MUDANÇA: Gatilho para a branch de produção
    paths:
      - 'frontend/**' # Gatilho para a pasta do frontend

jobs:
  terraform:
    name: 'Terraform Apply PRODUCTION'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS_PROD }}' # <<< MUDANÇA: Segredo de produção

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init
      working-directory: ./infra

    - name: Terraform Apply
      run: terraform apply -var-file="prod.tfvars" -auto-approve # <<< MUDANÇA: Arquivo de variáveis de produção
      working-directory: ./infra

  build-and-push:
    name: 'Build and Push Frontend Image'
    needs: terraform
    runs-on: ubuntu-latest
    
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_PROD }} # <<< MUDANÇA: Segredo de produção
      GCP_REGION: us-central1
      ARTIFACT_REPO: app-images
      IMAGE_NAME: frontend # <<< MUDANÇA: Imagem do frontend

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS_PROD }}' # <<< MUDANÇA: Segredo de produção
        
    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    - name: Build Docker image
      run: |
        docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ./frontend # <<< MUDANÇA: Diretório do Dockerfile

    - name: Push Docker image
      run: |
        docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: 'Deploy Frontend to GKE PRODUCTION'
    needs: build-and-push
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_PROD }} # <<< MUDANÇA: Segredo de produção
      GCP_REGION: us-central1
      GKE_CLUSTER: gke-prod-cluster # <<< MUDANÇA: Cluster de produção
      ARTIFACT_REPO: app-images
      IMAGE_NAME: frontend # <<< MUDANÇA: Imagem do frontend
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS_PROD }}' # <<< MUDANÇA: Segredo de produção

    - name: Get GKE credentials
      run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region ${{ env.GCP_REGION }}

    - name: Install/Upgrade Prometheus Stack
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
          --namespace monitoring --create-namespace \
          --wait
          
    - name: Update Kubernetes Manifest with new Image
      run: |
        sed -i 's|IMAGE_PLACEHOLDER|${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g' kubernetes/frontend/deployment.yaml # <<< MUDANÇA: Caminho do manifesto

    - name: Apply Kubernetes Manifests
      run: kubectl apply -f kubernetes/frontend/ # <<< MUDANÇA: Caminho do manifesto

    - name: Verify deployment
      run: kubectl rollout status deployment/frontend-deployment # <<< MUDANÇA: Nome do deployment